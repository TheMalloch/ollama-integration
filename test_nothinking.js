// Test simple pour vÃ©rifier la fonctionnalitÃ© no-thinking
console.log('ðŸ§ª Test de la fonctionnalitÃ© No-Thinking');

// Simuler vscode.workspace.getConfiguration
const mockVSCode = {
    workspace: {
        getConfiguration: (section) => {
            return {
                get: (key, defaultValue) => {
                    if (section === 'ollama' && key === 'disableThinking') {
                        return true; // ActivÃ© par dÃ©faut
                    }
                    return defaultValue;
                }
            };
        }
    }
};

// Mock de la mÃ©thode buildRequestOptions
function buildRequestOptions(baseOptions) {
    const config = mockVSCode.workspace.getConfiguration('ollama');
    const disableThinking = config.get('disableThinking', true);
    
    const options = { ...baseOptions };
    
    if (disableThinking) {
        options.no_thinking = true;
    }
    
    return options;
}

// Test 1: Avec thinking dÃ©sactivÃ© (par dÃ©faut)
console.log('\nðŸ“‹ Test 1: Thinking dÃ©sactivÃ© (dÃ©faut)');
const options1 = buildRequestOptions({
    temperature: 0.7,
    num_predict: 1000
});
console.log('Options gÃ©nÃ©rÃ©es:', JSON.stringify(options1, null, 2));
console.log('âœ… no_thinking prÃ©sent:', 'no_thinking' in options1 && options1.no_thinking === true);

// Test 2: Simuler thinking activÃ©
const mockVSCodeEnabled = {
    workspace: {
        getConfiguration: (section) => {
            return {
                get: (key, defaultValue) => {
                    if (section === 'ollama' && key === 'disableThinking') {
                        return false; // Thinking activÃ©
                    }
                    return defaultValue;
                }
            };
        }
    }
};

function buildRequestOptionsEnabled(baseOptions) {
    const config = mockVSCodeEnabled.workspace.getConfiguration('ollama');
    const disableThinking = config.get('disableThinking', true);
    
    const options = { ...baseOptions };
    
    if (disableThinking) {
        options.no_thinking = true;
    }
    
    return options;
}

console.log('\nðŸ“‹ Test 2: Thinking activÃ©');
const options2 = buildRequestOptionsEnabled({
    temperature: 0.7,
    num_predict: 1000
});
console.log('Options gÃ©nÃ©rÃ©es:', JSON.stringify(options2, null, 2));
console.log('âœ… no_thinking absent:', !('no_thinking' in options2));

console.log('\nðŸŽ‰ Tests terminÃ©s avec succÃ¨s !');
